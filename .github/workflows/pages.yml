name: "Build and Deploy GitHub Pages"
run-name: "Build and Deploy GitHub Pages"

on:
  workflow_dispatch:
  push:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Install tools
        run: sudo apt install tidy pandoc

      - name: Generate a security.txt file
        run: |
          tee -a security.txt << EOF
          Contact: https://github.com/jirastopwatch#get-involved
          Policy: https://github.com/jirastopwatch/jirastopwatch/security/policy
          Acknowledgments: $(gh api /repos/${{ github.repository }} --jq '.homepage')/humans.txt
          Canonical: $(gh api /repos/${{ github.repository }} --jq '.homepage')/security.txt
          Expires: $(date -u +"%Y-12-31T23:59:59.999Z")
          EOF

      - name: Generate a humans.txt file
        run: gh api /orgs/jirastopwatch/repos --template "${TEMPLATE}" | sh | tee -a humans.txt
        env:
          TEMPLATE: |
            echo "# Contributors by Repository"
            echo
            echo "A huge thanks to all and colaborators who have contributed to Jira StopWatch!"
            echo
            {{range .}}
            echo "## {{.full_name}}"
            echo
            gh api /repos/{{.full_name}}/contributors --jq '.[].login' | sort -u | xargs -ILOGIN gh api /users/LOGIN --jq '"@" + .login + " (" + (.name // .login) + ")"'
            echo
            {{end}}

      - name: Generate a changelog.md file
        run: gh api /repos/jirastopwatch/jirastopwatch/releases --template "${TEMPLATE}" | tee -a changelog.md
        env:
          TEMPLATE: |
            # Change Log

            {{range .}}
            ### [{{.name}}](https://github.com/jirastopwatch/jirastopwatch/releases/tag/{{.tag_name}})

            {{.body}}

            {{end}}

      - name: Create generated HTML files
        run: |
          make -f - << \EOF

          .POSIX:

          MARKDOWN = pandoc --from markdown+yaml_metadata_block+backtick_code_blocks+fenced_code_attributes+inline_notes --to html --standalone

          all: $(patsubst %.md,%.html,$(wildcard *.md))

          clean:
          	rm -f $(patsubst %.md,%.html,$(wildcard *.md))
          	rm -f *.bak *~

          %.html: %.md
          	$(MARKDOWN) $< --output /$@

          EOF

      - name: Tidy the HTML
        run: find . -name '*.html' | xargs tidy -indent --wrap 0 --output-html yes --warn-proprietary-attributes no -quiet -modify

      - name: Create a Pages Artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: .

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    concurrency:
      group: "pages"
      cancel-in-progress: false

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - id: deployment
        uses: actions/deploy-pages@v1
